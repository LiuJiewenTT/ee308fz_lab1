// Infomation output header.
    OINFOHEADER = f'[{__name__}]: '
    // example
    print(OINFOHEADER + f'fileName: {fileName}')

// Use it for many times.
    import global_vars

// global_vars.[var] in parameter list implementation: (example)
// ps. OR make file-scale global mode varible to use(not recommended)
    def __init__(self, mode: DevMode=None):
        # This case should write like this, or the parameter will be None value.
        if mode is None:
            mode = global_vars.gmode
        # print(global_vars.gmode)              # good
        # print(global_vars.gmode is None)      # False, good
        # print(mode)                           # None, when is written in parameter list.

// access file in the directory of program: (example, osp is os.path)
    open(osp.join(programDir, f'keywords_{fileExt.ext}.txt'))

// open file
    try:
        f = open(fileName)
    except FileNotFoundError as fe:
        estr = OINFOHEADER + f'{fe}'
        raise FileNotFoundError(estr)


// function header: debug env (example)
    def countKw(keys, strs:list):
        mode: DevMode
        mode = global_vars.gmode
        mode = mode.utilize()

// for files running without a scale, which share the memory space
    mode = global_vars.mode